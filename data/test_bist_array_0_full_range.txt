// --------------------------------------------------------------------
//  Test #BIST
// --------------------------------------------------------------------

//Switch the clock to internal
// --------------------------------------------------------------------
// Enable AMS
ENABLE_AMS
// idac_en, then vco_en, then clk_freqdiv_en, then clk_direct_en
REGWR 404 FF 01
REGWR 404 FF 03
REGWR 404 FF 0F

// Wait a bit
WAIT_NS F

// Switch from ref clk to internal VCO clk
REGWR 10 FF 03

// Reset modules
// --------------------------------------------------------------------
REGWR 0 654321FF CBA9871F
REGRD 0
// Deassert resets
REGWR 0 452301FF 0

/////////////////////////
// BIST CONF/START/STOP/STEP
/////////////////////////
// BIST dec count
// with 200 ADDR per block (i.e. count of failures in each block of that many addrs)
REGWR 200 00000200 200
// BIST inc count
// with 200 ADDR per block (i.e. count of failures in each block of that many addrs)
// REGWR 200 02000200 200

// BIST ADDR START
REGWR 204 00001FFF 0

// BIST ADDR STOP: 512 addresses of 32bytes each
// Whole coverage:
REGWR 208 00001FFF 3FE0

// BIST ADDR STEP
REGWR 20C 000000FF 32

// Array conf
// --------------------------------------------------------------------
// Write toggle numbers (as defined in kairos_dummy_array
// WL_WR    = 0(10)1(20)0(10)
// WL_RD    = 0(10)1(20)0(10)
// BL_l0_WR = 0(10)0(20)0(10)
// BL_l1_WR = 0(12)1( 9)0(19)
// PL_l0_WR = 0(12)1( 9)0(19)
// PL_l1_WR = 0(10)0(20)0(10)
// PL_RD    = 0(12)1( 9)0(19)
// SAEN     = 0(19)1(19)0( 2)
// First do 3 toggels of correct duration
REGWR 20 FFFFFFFF 22222222
REGRD 20
// WL rd and wr
REGWR 24 FFFFFFFF 00020002
REGRD 24
// BL (write) 0 and 1
REGWR 28 FFFFFFFF 00020000
REGRD 28
// PL write 0 and 1
REGWR 2C FFFFFFFF 00000002
REGRD 2C
// PL read  and saen
REGWR 30 FFFFFFFF 00020002
REGRD 30
// WL wr toggels 0 to 2 (-1 val)
REGWR 34 00FFFFFF 00091309
REGRD 34
// WL rd toggels 0 to 2 (-1 val)
REGWR 44 00FFFFFF 00091309
REGRD 44
// BL (write) 0 toggels 0 to 2 (-1 val)
REGWR 54 00FFFFFF 00091309
REGRD 54
// BL (write) 1 toggels 0 to 2 (-1 val)
REGWR 64 00FFFFFF 0013080B
REGRD 64
// PL write 0 toggels 0 to 2 (-1 val)
REGWR 74 00FFFFFF 0013080B
REGRD 74
// PL write 1 toggels 0 to 2 (-1 val)
REGWR 84 00FFFFFF 00091309
REGRD 84
// PL read toggels 0 to 2 (-1 val)
REGWR 94 00FFFFFF 0013080B
REGRD 94
// SAEN (read) toggels 0 to 2 (-1 val)
REGWR A4 00FFFFFF 00011212
REGRD A4
// SAEN cfg_rd_array_len_m1_saen_15 to ___12 write a dummy value and read
REGWR B0 FFFFFFFF 56789ABC
REGRD B0
REGCMP FFFFFFFF 56789ABC

// Read again some other value
REGRD 20

// Selec Array 0 (and not use mask) 
REGWR 18 0000001FF 00000000
// **** Need to Disable the bist before memeory transactions
REGWR 04 00000004 00000000
REGRD 04

//As a test change the cfg_busy_delay_m1 to 2 (delay of 3), anything less than this does not work with current pipeline delay 
REGRD 18
REGWR 18 00000F000 00002000
REGRD 18
REGCMP 00000F000 00002000

/////////////////////////
// SPI Triggered W/R
/////////////////////////
MEMWR B00 12345678 9ABCDEF0 87654321 0FEDCBA9 55555555 66666666 77777777 88888888
MEMRD B00
MEMCMP 12345678 9ABCDEF0 87654321 0FEDCBA9 55555555 66666666 77777777 88888888

/////////////////////////
// BIST
/////////////////////////
// Enable bist in system
REGWR 4 0000000F F

// Disable bist rst_n
REGWR 200 80000000 80000000
// Enable bist ce
REGWR 200 40000000 40000000
// Wait till tests start
WTSV busy_o 1
// Wait till tests end
WTSV busy_o 0
