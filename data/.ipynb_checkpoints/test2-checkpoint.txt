// --------------------------------------------------------------------
//  Test #2
// --------------------------------------------------------------------
// Desciption:
//   Write directly to memery and read it back as masked read


//Switch the clock to internal
// --------------------------------------------------------------------
// Enable AMS
ENABLE_AMS
// idac_en, then vco_en, then clk_freqdiv_en, then clk_direct_en
REGWR 404 FF 01
REGWR 404 FF 03
REGWR 404 FF 0F

// Wait a bit
WAIT_NS F

// Switch from ref clk to internal VCO clk
REGWR 10 FF 03


// Reset modules
// --------------------------------------------------------------------
REGWR 0 654321FF CBA9871F
REGRD 0
// Deassert rests
REGWR 0 452301FF 0

// Array conf
// --------------------------------------------------------------------
// Write toggle numbers (as defined in kairos_dummy_array
// WL_WR    = 0(10)1(20)0(10)
// WL_RD    = 0(10)1(20)0(10)
// BL_l0_WR = 0(10)0(20)0(10)
// BL_l1_WR = 0(12)1( 9)0(19)
// PL_l0_WR = 0(12)1( 9)0(19)
// PL_l1_WR = 0(10)0(20)0(10)
// PL_RD    = 0(12)1( 9)0(19)
// SAEN     = 0(19)1(19)0( 2)
// First do 3 toggels of correct duration
REGWR 20 FFFFFFFF 22222222
REGRD 20
// WL rd and wr
REGWR 24 FFFFFFFF 00020002
REGRD 24
// BL (write) 0 and 1
REGWR 28 FFFFFFFF 00020000
REGRD 28
// PL write 0 and 1
REGWR 2C FFFFFFFF 00000002
REGRD 2C
// PL read  and saen
REGWR 30 FFFFFFFF 00020002
REGRD 30
// WL wr toggels 0 to 2 (-1 val)
REGWR 34 00FFFFFF 00091309
REGRD 34
// WL rd toggels 0 to 2 (-1 val)
REGWR 44 00FFFFFF 00091309
REGRD 44
// BL (write) 0 toggels 0 to 2 (-1 val)
REGWR 54 00FFFFFF 00091309
REGRD 54
// BL (write) 1 toggels 0 to 2 (-1 val)
REGWR 64 00FFFFFF 0013080B
REGRD 64
// PL write 0 toggels 0 to 2 (-1 val)
REGWR 74 00FFFFFF 0013080B
REGRD 74
// PL write 1 toggels 0 to 2 (-1 val)
REGWR 84 00FFFFFF 00091309
REGRD 84
// PL read toggels 0 to 2 (-1 val)
REGWR 94 00FFFFFF 0013080B
REGRD 94
// SAEN (read) toggels 0 to 2 (-1 val)
REGWR A4 00FFFFFF 00011212
REGRD A4
// SAEN cfg_rd_array_len_m1_saen_15 to ___12 write a dummy value and read
REGWR B0 FFFFFFFF 56789ABC
REGRD B0
REGCMP FFFFFFFF 56789ABC

// Read again some other value
REGRD 20

// Selec Array 0 (and not use mask) 
REGWR 18 0000001FF 00000000
// **** Need to Disable the bist before memeory transactions
REGWR 04 00000004 00000000
REGRD 04
// Do a read/write cycle on MEM (this is WL 2BE0 >> 5 | 1F = d'351, i.e. 352th array)
MEMWR 2BE0 12345678 9ABCDEF0 87654321 0FEDCBA9 55555555 66666666 77777777 88888888
//Note A=4'b1010 (it will ignore two most significant bits hence ABE0 sould read the 2BE0 (just do this as a check right bit cutoff)
MEMRD ABE0

// Use mask now (still Array 0) but read/write same address 2BE0
REGWR 18 00000100 00000100
// Need to set mask of WL to 351 (in 0 to 511 bit mask), hence only need to program 351 to 320 mask reg with 351-320 = 31st active => 80000000
// Set mask for WL 6320 to 351 addreses
REGWR E8 FFFFFFFF 80000000
REGRD E8

// Set BL masks (read every byte)
REGWR 100 FFFFFFFF FFFFFFFF
REGRD 100
REGWR 104 FFFFFFFF FFFFFFFF
REGRD 104
REGWR 108 FFFFFFFF FFFFFFFF
REGRD 108
REGWR 10C FFFFFFFF FFFFFFFF
REGRD 10C
REGWR 110 FFFFFFFF FFFFFFFF
REGRD 110
REGWR 114 FFFFFFFF FFFFFFFF
REGRD 114
REGWR 118 FFFFFFFF FFFFFFFF
REGRD 118
REGWR 11C FFFFFFFF FFFFFFFF
REGRD 11C
// Read back through masking the direct written value
MEMRDM
MEMCMP 12345678 9ABCDEF0 87654321 0FEDCBA9 55555555 66666666 77777777 88888888
