// --------------------------------------------------------------------
// Test #1
// --------------------------------------------------------------------
// Desciption:
//   Write/read directly to memory
//   Write to some other mutltiple WLs locations and do a bit masked read

// Reset modules
REGWR 0 654321FF CBA9871F
REGRD 0
// Deassert rests
// REGWR 0 452301FF 0  ############ CHANGED ############

// Array conf
// --------------------------------------------------------------------
// Write toggle numbers (as defined in kairos_dummy_array)
// WL_WR    = 0(10)1(20)0(10)
// WL_RD    = 0(10)1(20)0(10)
// BL_l0_WR = 0(10)0(20)0(10)
// BL_l1_WR = 0(12)1( 9)0(19)
// PL_l0_WR = 0(12)1( 9)0(19)
// PL_l1_WR = 0(10)0(20)0(10)
// PL_RD    = 0(12)1( 9)0(19)
// SAEN     = 0(19)1(19)0( 2)
// First do 3 toggels of correct duration
REGWR 20 FFFFFFFF 22222222
REGRD 20
// WL rd and wr
REGWR 24 FFFFFFFF 00020002
REGRD 24
// BL (write) 0 and 1
REGWR 28 FFFFFFFF 00020000
REGRD 28
// PL write 0 and 1
REGWR 2C FFFFFFFF 00000002
REGRD 2C
// PL read  and saen
REGWR 30 FFFFFFFF 00020002
REGRD 30
// WL wr toggels 0 to 2 (-1 val)
REGWR 34 00FFFFFF 00091309
REGRD 34
// WL rd toggels 0 to 2 (-1 val)
REGWR 44 00FFFFFF 00091309
REGRD 44
// BL (write) 0 toggels 0 to 2 (-1 val)
REGWR 54 00FFFFFF 00091309
REGRD 54
// BL (write) 1 toggels 0 to 2 (-1 val)
REGWR 64 00FFFFFF 0013080B
REGRD 64
// PL write 0 toggels 0 to 2 (-1 val)
REGWR 74 00FFFFFF 0013080B
REGRD 74
// PL write 1 toggels 0 to 2 (-1 val)
REGWR 84 00FFFFFF 00091309
REGRD 84
// PL read toggels 0 to 2 (-1 val)
REGWR 94 00FFFFFF 0013080B
REGRD 94
// SAEN (read) toggels 0 to 2 (-1 val)
REGWR A4 00FFFFFF 00011212
REGRD A4
// SAEN cfg_rd_array_len_m1_saen_15 to ___12 write a dummy value and read
REGWR B0 FFFFFFFF 56789ABC
REGRD B0
REGCMP FFFFFFFF 56789ABC

// Read again some other value
REGRD 20

// Selec Array 0 (and not use mask) 
REGWR 18 000001FF 00000000
REGRD 18
// **** Need to Disable the bist before memeory transactions
REGWR 04 00000004 00000000
REGRD 04

//As a test change the cfg_busy_delay_m1 to 2 (delay of 3), anything less than this does not work with current pipeline delay 
REGRD 18
REGWR 18 0000F000 00002000
REGRD 18
REGCMP 0000F000 00002000

// Do a read/write cycle on MEM (this is WL 88, i.e. 89th array)
MEMWR B00 12345678 9ABCDEF0 87654321 0FEDCBA9 55555555 66666666 77777777 88888888
MEMRD B00
MEMCMP 12345678 9ABCDEF0 87654321 0FEDCBA9 55555555 66666666 77777777 88888888

// Use mask now (still Array 0) but read/write some address other than B00 ('d988)
REGWR 18 00000100 00000100
// 20 and 23: Some address other than WL 88 (<88)
REGWR C0 FFFFFFFF 00500000
// REGRD CC            ############## COMMENTED ##############
// 257: Some address other than WL 88 (>88)
REGWR E0 FFFFFFFF 00000002
REGRD E0

// Set BL masks (arbitrary say read every alternative byte)
REGWR 100 F0FFFFFF FFFFFFFF
REGRD 100
REGWR 104 FF0FFAFF FFFFFFFF
REGRD 104
REGWR 108 0FFFFFFF FFFFFFFF
REGRD 108
REGWR 10C FFFFFFFE FFFFFFFF
REGRD 10C
REGWR 110 1FF0F4FF FFFFFFFF
REGRD 110
REGWR 114 E0FFFFF9 FFFFFFFF
REGRD 114
REGWR 118 FABFFFFF FFFFFFFF
REGRD 118
REGWR 11C FFFFFFFF FFFFFFFF
REGRD 11C
// Write actual mask read/writecommnads
//     FFFFFFFF FABFFFFF E0FFFFF9 1FF0F4FF FFFFFFFE 0FFFFFFF FF0FFAFF F0FFFFFF      // Mask for read/write
//     12345678 9ABCDEF0 87654321 0FEDCBA9 55555555 66666666 77777777 88888888      // Addr 'd95
MEMWRM E7895712 FE409341 0FEDCB06 70001111 BEEFEA56 EEEEEEEE CCCCCCCD 888888FF      
MEMRDM
// Note the unmasked bits 
MEMCMP E7895712 FA009341 07EDCB00 100D1B11 BEEFEA57 6EEEEEEE CC7CCDCD 888888FF
