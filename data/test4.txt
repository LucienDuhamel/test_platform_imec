// --------------------------------------------------------------------
//  Test #4
// --------------------------------------------------------------------
// Desciption:
//   Read write to various Arrays and Devices in various modes interlaved each other

// Enable clock to internal
// --------------------------------------------------------------------

// DISABLE_AMS

// idac_en, then vco_en, then clk_freqdiv_en, then clk_direct_en
REGWR 404 FF 01
REGWR 404 FF 03
REGWR 404 FF 0F

// Wait a bit
WAIT_NS F

// Switch from ref clk to internal VCO clk
REGWR 10 FF 03

// Reset modules
// --------------------------------------------------------------------
REGWR 0 654321FF CBA9871F
REGRD 0
// Deassert rests
REGWR 0 452301FF 0

// Array conf
// --------------------------------------------------------------------
// Write toggle numbers (as defined in kairos_dummy_array
// WL_WR    = 0(10)1(20)0(10)
// WL_RD    = 0(10)1(20)0(10)
// BL_l0_WR = 0(10)0(20)0(10)
// BL_l1_WR = 0(12)1( 9)0(19)
// PL_l0_WR = 0(12)1( 9)0(19)
// PL_l1_WR = 0(10)0(20)0(10)
// PL_RD    = 0(12)1( 9)0(19)
// SAEN     = 0(19)1(19)0( 2)

//Rely on defaults here

ENABLE_AMS

// Write to device4 and read back
// --------------------------------------------------------------------
// Select device 3 counting from 0 (and not use mask) 
REGWR 18 0000001FF 00000007
// Do a read/write cycle on MEM (address is not used)
// Also note other than two lsb being 01, everything else should be ignored
MEMWR FEF 43D1E46F 150D87BA 85A868EF 7E9532E8 0E1A588A B0ED72C8 BF934E58 045EDCBD
MEMRD 0E3
MEMCMP 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000001

// Write to device7 and read back but read in differantial mode
// --------------------------------------------------------------------
// Select device 6 counting from 0 (and not use mask) 
REGWR 18 000001FF 0000000A
// Set cfga_set4diff = 1'b1 
REGWR 400 00000010 00000010
// Do a read/write cycle on MEM (address is not used)
MEMWR 111 0 0 0 0 0 0 0 1
// Select device 21 counting from 0 (and not use mask) 
REGWR 18 000001FF 00000019
MEMRD F3A
// Note this device is not written nece should be 0
MEMCMP 0 0 0 0 0 0 0 0
// Select device 6 counting from 0 again (and not use mask) 
REGWR 18 000001FF 0000000A
MEMRD 0
// Now it should be the written value
MEMCMP 0 0 0 0 0 0 0 00000001
// Reset cfga_set4diff = 1'b0
REGWR 400 00000010 00000000

// Write to array locations and few devices and read back out of order
// --------------------------------------------------------------------

// 1. Do a driect write to Array 2
// --------------------------------------------------------------------
// Selec Array 2 (and not use mask) 
REGWR 18 000001FF 00000002
// Do a direct write to WL d13; Byte address d13<<5 = 1A0
MEMWR 1A0 EA51D0E5 784ECFFC FF1F4047 843D1637 4141CAAC 0225BE28 80AA65D1 3FA9C149

// 2. Do a device write to Dev 0, 7 and 31
// --------------------------------------------------------------------
// No mask + Select Dev 0
REGWR 18 000001FF 00000004
MEMWR 0 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000002
// No mask + Select Dev 7
REGWR 18 000001FF 0000000B
MEMWR FE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000001
// No mask + Select Dev 31
REGWR 18 000001FF 00000023
MEMWR 3A0 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000001

// 3. Do a mask write to WL d278 (address d278<<5 = h22C0 of Array 3
// --------------------------------------------------------------------
// First write a pre-known value to the masking write bit (otherwise when direct read it will be unknown)
// No mask + Select Array 3
REGWR 18 000001FF 00000003
MEMWR 22C0 00000000 00000000 00000000 00000000 00000000 00000000 00000000 C0000000
// Use mask now + Select Array 3
REGWR 18 000001FF 00000103
// Need to set mask of WL to d278 (in 0 to 511 bit mask), hence only need to program 256 to 287 mask reg with 278-256 = 22nd active => 00400000
// Set mask for WL 278 to 287 addreses
REGWR E0 FFFFFFFF 00400000
// Set BL masks (write every byte except bits 28-31)
REGWR 100 FFFFFFFF 0FFFFFFF
REGWR 104 FFFFFFFF FFFFFFFF
REGWR 108 FFFFFFFF FFFFFFFF
REGWR 10C FFFFFFFF FFFFFFFF
REGWR 110 FFFFFFFF FFFFFFFF
REGWR 114 FFFFFFFF FFFFFFFF
REGWR 118 FFFFFFFF FFFFFFFF
REGWR 11C FFFFFFFF FFFFFFFF
// Write the value to WL=d278
MEMWRM 23DA7126 FD93AF8A E6898B64 93A0BA3A 8BC5A0C7 C737D1C6 8FEE7AF6 DE5EC222
//     23DA7126 FD93AF8A E6898B64 93A0BA3A 8BC5A0C7 C737D1C6 8FEE7AF6 0E5EC222  (read comapre value)
// Reset the E0 WL mask (don't forget this!!)
REGWR E0 FFFFFFFF 00000000

// 4. Over-write device 0, 7 and 31
// --------------------------------------------------------------------
// No mask + Select Dev 7
REGWR 18 000001FF 0000000B
// Differential write is wrong!!
MEMWR FE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
// No mask + Select Dev 31
REGWR 18 000001FF 00000023
MEMWR BEE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000002
// No mask + Select Dev 0
REGWR 18 000001FF 00000004
//Differential write is wrong!!
MEMWR 123 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000003

// 5. Do a mask readback of address 1A0 of Array 2
// --------------------------------------------------------------------
// Use mask now + Select Array 2
REGWR 18 000001FF 00000102
// Need to set mask of WL to 13 (in 0 to 511 bit mask), hence only need to program 0 to 31 mask reg with 13-0 = 13th active => 00002000
// Set mask for WL 0 to 31 addreses
REGWR C0 FFFFFFFF 00002000
REGRD C0
REGCMP FFFFFFFF 00002000

// Set BL masks (write every byte except bits 64-67, 255 and 253)
REGWR 100 FFFFFFFF FFFFFFFF
REGWR 104 FFFFFFFF FFFFFFFF
REGWR 108 FFFFFFFF FFFFFFF0
REGWR 10C FFFFFFFF FFFFFFFF
REGWR 110 FFFFFFFF FFFFFFFF
REGWR 114 FFFFFFFF FFFFFFFF
REGWR 118 FFFFFFFF FFFFFFFF
REGWR 11C FFFFFFFF 5FFFFFFF

// Read the Array 2 value
// Read back through masking the direct written value
MEMRDM
//     5FFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFF0 FFFFFFFF FFFFFFFF
//     EA51D0E5 784ECFFC FF1F4047 843D1637 4141CAAC 0225BE28 80AA65D1 3FA9C149
MEMCMP 4A51D0E5 784ECFFC FF1F4047 843D1637 4141CAAC 0225BE20 80AA65D1 3FA9C149
// Reset the C0 WL mask (don't forget this!!)
REGWR C0 FFFFFFFF 00000000

// 6. Readback dev31
// --------------------------------------------------------------------
// No mask + Select Dev 31
REGWR 18 000001FF 00000023
MEMRD BEEF
// Overwritten value
MEMCMP 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000

// 7. Direct readback Array 3
// --------------------------------------------------------------------
// No mask + Select Array 3
REGWR 18 000001FF 00000003
// Address d278<<5 = h22C0
MEMRD 22C0
MEMCMP 23DA7126 FD93AF8A E6898B64 93A0BA3A 8BC5A0C7 C737D1C6 8FEE7AF6 CE5EC222

// 8. Readback dev7
// --------------------------------------------------------------------
// No mask + Select Dev 7
REGWR 18 000001FF 0000000B
MEMRD FEED
// Note Dev7 is written wrongly differentially, hence comapre with earlier value
MEMCMP 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000001

// 9. Direct write Array 0  Address h100 (d256)
// --------------------------------------------------------------------
// No mask + Select Array 0
REGWR 18 000001FF 00000000
MEMWR 100 D5E6765C 8157FFC9 F3A780EF 91A9DA0B A0DF068F CBD857DF 43B50BB7 D6B59DA0

// 10. Readback dev0
// --------------------------------------------------------------------
// No mask + Select Dev 0
REGWR 18 000001FF 00000004
MEMRD 0
// Note writing is wrong hence compare with orginal value
MEMCMP 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000

// 11. Direct read Array 0 Address h100 (d256)
// --------------------------------------------------------------------
// No mask + Select Array 0
REGWR 18 000001FF 00000000
MEMRD 0100
MEMCMP D5E6765C 8157FFC9 F3A780EF 91A9DA0B A0DF068F CBD857DF 43B50BB7 D6B59DA0